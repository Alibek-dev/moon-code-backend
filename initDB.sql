USE moon_code;

CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstName` VARCHAR(255), `secondName` VARCHAR(255), `patronymic` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;
CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `text` VARCHAR(255) UNIQUE, `userId` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS `tests` (`id` INTEGER NOT NULL auto_increment , `outputType` VARCHAR(255), `outputValue` VARCHAR(255), `taskId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`taskId`) REFERENCES `tasks` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS `parcels` (`id` INTEGER NOT NULL auto_increment , `code` TEXT, `status` VARCHAR(255), `taskId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`taskId`) REFERENCES `tasks` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS `testResults` (`id` INTEGER NOT NULL auto_increment , `isPassed` TINYINT(1), `errorMessage` TEXT, `testId` INTEGER, `parcelId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`testId`) REFERENCES `tests` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`parcelId`) REFERENCES `parcels` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS `inputs` (`id` INTEGER NOT NULL auto_increment , `type` VARCHAR(255), `value` VARCHAR(255), `testId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`testId`) REFERENCES `tests` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS `ratings` (`id` INTEGER NOT NULL auto_increment , `value` VARCHAR(255), `taskId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`taskId`) REFERENCES `tasks` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS `favoriteTasks` (`id` INTEGER NOT NULL auto_increment , `taskId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`taskId`) REFERENCES `tasks` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;

